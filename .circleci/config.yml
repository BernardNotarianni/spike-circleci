version: 2
jobs:
  pytest:
    docker:
      - image: python:3.6

    working_directory: ~/my-webapp

    steps:
      - checkout

      - run:
          name: run tests
          command: |
            cd my-webapp
            pip3 install pytest
            pip3 install pytest-cov
            python3 -m pytest --cov --cov-report=html:reports --junitxml=test-reports/junit.xml

      - store_test_results:
          path: my-webapp/test-reports

      - store_artifacts:
          path: my-webapp/test-reports    

      - store_artifacts:
          path: my-webapp/reports
          destination: test-reports

  # https://circleci.com/docs/2.0/google-auth/
  # https://circleci.com/docs/2.0/google-container-engine/
  # https://cloud.google.com/container-registry/docs/pushing
  build-push-docker:
    machine: true
    steps:
      - checkout

      - run:
          name: build docker image
          command: |
            echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud config set project spike-concourse
            cd my-webapp
            docker build --rm=false -t gcr.io/spike-concourse/my-webapp:$CIRCLE_SHA1 .
            gcloud docker -- push gcr.io/spike-concourse/my-webapp:$CIRCLE_SHA1          

  deploy-kubernetes:
    docker:
      - image: google/cloud-sdk
    environment:
      - GOOGLE_PROJECT_ID: "spike-concourse"
      - GOOGLE_COMPUTE_ZONE: "europe-west1-c"
      - GOOGLE_CLUSTER_NAME: "concourse"

    steps:
      - checkout

      - run:
          name: build docker image
          command: |
            echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}


            TAG=${COMMIT_SHA1}
            NAMESPACE=my-webapp
            envsubst < ${HOME}/kubernetes/k8s_template.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
            kubectl rollout status deployment/my-webapp

workflows:
  version: 2
  test_and_build:
    jobs:
      - pytest
      - build-push-docker:
          context: gcloud
          requires:
            - pytest
      - deploy-kubernetes:
          context: gcloud
          context: gcloud
          requires:
            - build-push-docker

          


